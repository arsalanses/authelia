###############################################################
#                   Authelia configuration                    #
###############################################################

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
jwt_secret: a_very_important_secret
default_redirection_url: https://whoami.arsalanses.ir

server:
  host: 0.0.0.0
  port: 9091

log:
  level: debug

totp:
  issuer: auth.arsalanses.ir
  period: 30
  skew: 1

# duo_api:
#  hostname: api-123456789.example.com
#  integration_key: ABCDEF
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: 1234567890abcdefghifjkl

authentication_backend:
  # file:
  #   path: /config/users_database.yml
  #   # customize passwords based on https://docs.authelia.com/configuration/authentication/file.html
  #   password:
  #     algorithm: argon2id
  #     iterations: 1
  #     salt_length: 16
  #     parallelism: 8
  #     memory: 1024 # blocks this much of the RAM. Tune this.
  ldap:
    implementation: custom
    url: ldap://lldap:3890
    timeout: 5s
    start_tls: false
    # tls:
    #  skip_verify: false
    #  minimum_version: TLS1.2
    base_dn: dc=arsalanses,DC=ir
    username_attribute: uid
    additional_users_dn: OU=people
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: OU=groups
    groups_filter: (member={dn})
    group_name_attribute: cn
    mail_attribute: mail
    display_name_attribute: displayName
    # The username and password of the admin or service user.
    user: UID=admin,OU=people,DC=arsalanses,DC=ir
    password: "REPLACE_WITH_PASSWORD"

access_control:
  # deny
  default_policy: one_factor
  rules:
    # Rules applied to everyone
    - domain: whoami.arsalanses.ir
      policy: bypass
    - domain: traefik-auth.arsalanses.ir
      policy: one_factor
    - domain: whoamis.arsalanses.ir
      policy: two_factor
    # - domain: heimdall.arsalanses.ir
    #   policy: one_factor
    # - domain: nextcloud.arsalanses.ir
    #   policy: one_factor

identity_providers:
  oidc:
    ## The other portions of the mandatory OpenID Connect 1.0 configuration go here.
    ## See: https://www.authelia.com/c/oidc
    issuer_private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpQIBAAKCAQEAwESRPYQIU/Rey+7s3JIjOrm/PRQkgmqPZ2uyYr8NEiiW9/2E
      Zai7qg5GOFXC5oaFLBrYtqKP+bmPMKtvhO5AoNsoChhpiBSAF0HgLSVdvDsRbWnU
      s0WbAGSt0K6uciN3vpUVn9j9tYYRFyoxHPWW2TrssYOGJweajuyBPwSCfDz4TIts
      Aa26TA63/YjlB7qa0NzsLf3PXo4qsg2oVaArnFAPlP9I3ZFYeE5s53k6s3SPvgLK
      zyLNl+6XbGgX9POr8yydIcGABb41rmh9yn9mF932+JfuwP0ELcydQy1pS9wCHPiT
      OWZz+ROOV6x0609hKQoltt8gGlNtXneQ/7TBLwIDAQABAoIBAQCzRvw65QMy7Vj7
      RVTdMvLgjlSQqliEtsHyyEw0oTqZ5PkoUd8DP7uFDPxTCTzL4UEJ6BqM6bXgQDMR
      SbmZtOLUWqXSDANTHPJ3PTjAP+hQXK+aWyU26D9otXgRbuBAk2vTbIYWX6nqehEz
      jWbwPtuiwLv1pdMQT5nBjSvSy+yz1DME6rLeAii/bcTlgA/ZTLeUulOExcrbLG3k
      +ojF33PSMRhjjvl801lILQYJ/1el2HnRmFrKySAg2P2DYYAgocpzQsp+ajejcFiU
      e2ShmkGAPAUWqsibz6sWTxMsDzAEKAiosDvglOHDq5q8iJRq+2/kl57Hu0puwMjO
      0OP6wOQpAoGBAPCVH6CVVmSai6MiEMorCZ2IXukoq1DndKa8fcyR0OOqbt9f7nJM
      RQw3UKNcGtEmgmNjRcxQCYq9Gncs1rx48yIfeQlgCjXZqLQBgohAOpKyO6Azpkr1
      sSC/DBabipD374h2Zvms4Qjhu+MQAQ+JSokuVuFzAF6vk4tmWprjWwcFAoGBAMyW
      0UNUKBXa+ZS9sCSTTU2Gr56kYLn06wCJeUNEQUExeyCyLP99JgQkcdLy+9dQ7jQJ
      hmcPKJCWD9ND7tRjrPEcwr9XNLPhcLXXKM5ppMAduDOChAb+I9keayjw6afF7NlL
      18m/MOQC2wVV220CVl7zwJqHRCnmiU6irMhqgnWjAoGBAJTtKxPj/gPu60vD1bLg
      a2ZaOa6Jn2tIrBxfCFyvUyjroxChuOCGOCP0xfUqGeuotAREOrvcO9vnbc+iMReg
      o5lW9D0Kd6eYImezm5Mud1PCA0kLUACNEOXdfeUsyd0trdjCusIJ84/k9ML9cDqm
      2T4MMnoDD5KNi386kBHbdcjlAoGBAKnxsbyS4IVfEyjp9LI9Jd57PdCyzKJLfxZA
      G9mzjd0ApD3Bo71KkNSqDV7kdiwiTuws6VcccV7BOD4O1QnaDmNut5rHbsDpSH3U
      T1I+0RrA1Sz8gn1oiBCnwu4MSJsTvy21YXd1eMA+Wv7wlcfURDi1k80JBackl/QZ
      Dxuf1eSvAoGAQyyka+eP9Yoe2JSMTZVdPQ0AvkKUMnwm/VuFsoDpglpMHbEhwvXa
      3gpwbLvrbURnt2ZYoAZTykb/aw7UrPJLWnoXtwUCgrporQapn0T/bhvVNWm2Swwd
      Ar0UqFZfNm2tpWcRsBvBKctATYqGy+sFAc4Oj2Z2N7UicTNne6IAKgY=
      -----END RSA PRIVATE KEY-----
    clients:
    - id: nextcloud
      description: NextCloud
      secret: '$pbkdf2-sha512$310000$c8p78n7pUMln0jzvd4aK4Q$JNRBzwAo0ek5qKn50cFzzvE9RXV88h1wJn5KGiHrD0YKtZaR/nCb2CJPOsKaPK0hjf.9yHxzQGZziziccp6Yng'  # The digest of 'insecure_secret'.
      public: false
      authorization_policy: two_factor
      redirect_uris:
        - https://auth.arsalanses.ir/index.php/apps/sociallogin/custom_oidc/Authelia
        # - https://nextcloud.arsalanses.ir/apps/oidc_login/oidc
      scopes:
        - openid
        - profile
        - email
        - groups
      userinfo_signing_algorithm: none

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # Used a different secret, but the same site as jwt_secret above.
  secret: SECRET_GOES_HERE
  expiration: 3600 # 1 hour
  inactivity: 300 # 5 minutes
  domain: arsalanses.ir # Should match whatever your root protected domain is

  # redis:
  #   host: redis
  #   port: 6379
  #   # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
  #   # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
  encryption_key: you_must_generate_a_random_string_of_more_than_twenty_chars_and_configure_this
  local:
    path: /config/db.sqlite3

notifier:
  filesystem:
    filename: /config/notification.txt
  # smtp:
  #   username: SMTP_USERNAME
  #   # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
  #   # password: # use docker secret file instead AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
  #   host: SMTP_HOST
  #   port: 587 #465
  #   sender: batman@example.com # customize for your setup
